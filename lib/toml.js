// Generated by CoffeeScript 1.12.7
(function() {
  var TOML, YAML, _TOML, async, call, errors, path, read, ref, ref1, subcommand;

  ref = require("fairmont"), async = ref.async, call = ref.call, read = ref.read;

  TOML = require("@iarna/toml");

  YAML = require("./yaml");

  errors = require("./errors");

  ref1 = process.argv.slice(2), subcommand = ref1[0], path = ref1[1];

  _TOML = {
    read: async(function*(_path) {
      var data, error, toml;
      path = _path === "-" ? process.stdin : _path;
      try {
        toml = (yield read(path));
      } catch (error1) {
        error = error1;
        errors.readingPath(error, path);
      }
      try {
        data = TOML.parse(toml);
      } catch (error1) {
        error = error1;
        errors.parsingTOML(error);
      }
      return data;
    }),
    write: function(data) {
      var error, result;
      result = (function() {
        if (data != null) {
          try {
            return TOML.stringify(data);
          } catch (error1) {
            error = error1;
            return errors.formattingTOML(error);
          }
        } else {
          return "";
        }
      })();
      return console.log(result);
    }
  };

  if ((subcommand != null) && (subcommand === "read" || subcommand === "write") && (path != null)) {
    call(function*() {
      if (subcommand === "write") {
        return _TOML.write((yield YAML.read(path)));
      } else {
        return YAML.write((yield _TOML.read(path)));
      }
    });
  } else {
    console.error("yaml toml: invalid arguments");
    console.error("yaml toml [read|write] <path>");
    process.exit(-1);
  }

}).call(this);
