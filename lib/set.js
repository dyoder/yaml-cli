// Generated by CoffeeScript 1.12.7
(function() {
  var YAML, call, path, promise, ref, reference, value,
    slice = [].slice;

  call = require("fairmont").call;

  YAML = require("./yaml");

  ref = process.argv.slice(2), path = ref[0], reference = ref[1], value = 3 <= ref.length ? slice.call(ref, 2) : [];

  if ((path != null) && (reference != null) && (value != null)) {
    promise = call(function*() {
      var current, i, j, key, keys, last, len, ref1, root;
      root = current = (yield YAML.read(path));
      ref1 = reference.split("."), keys = 2 <= ref1.length ? slice.call(ref1, 0, i = ref1.length - 1) : (i = 0, []), last = ref1[i++];
      for (j = 0, len = keys.length; j < len; j++) {
        key = keys[j];
        current = current[key];
      }
      current[last] = value.join(" ");
      return YAML.write(root);
    });
    promise["catch"](function(error) {
      console.error("yaml set: error while reading file " + error.message);
      return process.exit(1);
    });
  } else {
    console.error("yaml set: insufficient arguments");
    console.error("yaml set <path> <reference> <value>");
    process.exit(1);
  }

}).call(this);
